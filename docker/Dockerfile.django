# Use the official Python image as the base image
FROM python:3.9

# Install dockerize
ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# Set environment variable to prevent Python from writing pyc files to disk
ENV PYTHONDONTWRITEBYTECODE 1

# Set environment variable to ensure that Python outputs everything to stdout/stderr
ENV PYTHONUNBUFFERED 1

# Install PostgreSQL client library
RUN apt-get update && apt-get install -y libpq-dev

# Set the working directory inside the container
WORKDIR /api

# Copy the requirements.txt file into the container
COPY ./requirements.txt /api/

# Install Python dependencies
RUN pip install --upgrade pip
RUN pip install -r requirements.txt

# Copy the rest of the application code into the container
COPY . /api/

# Expose the Django development server port
EXPOSE 8000

# Run the Django development server when the container starts
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]